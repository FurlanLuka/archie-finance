apiVersion: apps/v1
kind: Deployment
metadata:
  name: archie-credit-api
  labels:
    app: archie-credit-api
    {{- if not .Values.local }}
    tags.datadoghq.com/env: '{{ .Values.environment }}'
    tags.datadoghq.com/service: 'archie-credit-api'
    tags.datadoghq.com/version: '{{ .Values.tag }}'
    {{- end }}
spec:
  selector:
    matchLabels:
      app: archie-credit-api
  {{- if not .Values.local }}
  replicas: 1
  {{- else }}
  replicas: 1
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: archie-credit-api
        {{- if not .Values.local }}
        tags.datadoghq.com/env: '{{ .Values.environment }}'
        tags.datadoghq.com/service: 'archie-credit-api'
        tags.datadoghq.com/version: '{{ .Values.tag }}'
        {{- else }}
        helm-revision: '{{ .Release.Revision }}'
        {{- end }}
    spec:
      containers:
        - name: archie-credit-api
          image: '{{ .Values.image }}:{{ .Values.tag }}'
          {{- if not .Values.local }}
          imagePullPolicy: Always
          {{- else }}
          imagePullPolicy: Never
          {{- end }}
          ports:
            - containerPort: 80
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            httpGet:
              path: /health
              port: 80
          resources:
            requests:
              memory: '64Mi'
              cpu: '50m'
            limits:
              memory: '256Mi'
              cpu: '500m'
          {{- if not .Values.local }}
          env:
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_LOGS_INJECTION
              value: 'true'
            - name: AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: auth0-secrets
                  key: domain
            - name: AUTH0_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: auth0-secrets
                  key: audience
            - name: TYPEORM_USERNAME
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: username
            - name: TYPEORM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: password
            - name: TYPEORM_HOST
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: hostname
            - name: TYPEORM_PORT
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: port
            - name: TYPEORM_DATABASE
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: database
            - name: INTERNAL_API_URL
              valueFrom:
                secretKeyRef:
                  name: internal-api-secrets
                  key: internal-api-url
            - name: RIZE_HMAC_KEY
              valueFrom:
                secretKeyRef:
                  name: rize-secrets
                  key: hmac-key
            - name: RIZE_PROGRAM_UID
              valueFrom:
                secretKeyRef:
                  name: rize-secrets
                  key: program-uid
            - name: QUEUE_URL
              valueFrom:
                secretKeyRef:
                  name: queue-secrets
                  key: queue-url
          {{- end }}
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: archie-credit-api-service
  labels:
    app: archie-credit-api-service
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: archie-credit-api
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: check-margin-calls
spec:
  schedule: "0 * * * *"
  jobTemplate:
    metadata:
      name: check-margin-calls
    spec:
      template:
        spec:
          containers:
            - name: check-margin-calls-job
              image: curlimages/curl
              imagePullPolicy: IfNotPresent
              env:
                - name: INTERNAL_API_URL
                  {{- if not .Values.local }}
                  valueFrom:
                    secretKeyRef:
                      name: internal-api-secrets
                      key: internal-api-url
                  {{- else }}
                  value: http://host.minikube.internal
                  {{- end }}
              command:
                - /bin/sh
                - -c
                - curl -X POST ${INTERNAL_API_URL}/internal/margins/check
          restartPolicy: OnFailure
