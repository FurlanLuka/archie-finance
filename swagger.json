{
  "openapi": "3.0.3",
  "info": {
    "title": "Archie finance API",
    "description": "",
    "version": "1.0.0",
    "contact": {}
  },
  "servers": [],
  "paths": {
    "/v1/asset_price": {
      "get": {
        "operationId": "AssetPriceController_getAssetPrices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAssetPriceResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/asset_price/{asset}": {
      "get": {
        "operationId": "AssetPriceController_getAssetPrice",
        "parameters": [
          {
            "name": "asset",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetPriceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/internal/asset_price/fetch": {
      "get": {
        "operationId": "InternalAssetPriceController_fetchAssetPrices",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v1/deposit_address/{asset}": {
      "get": {
        "operationId": "DepositAddressController_getDepositAddress",
        "parameters": [
          {
            "name": "asset",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDepositAddressResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "DEPOSIT_ADDRESS_UNKNOWN_ASSET"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/fireblocks/webhook": {
      "post": {
        "operationId": "FireblocksWebhookController_webhook",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          },
          "500": {
            "description": "FIREBLOCKS_WEBHOOK_ERROR"
          }
        }
      }
    },
    "/v1/credit": {
      "post": {
        "operationId": "CreditController_createCreditLine",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ERR_CREATE_CREDIT_MINIMUM_COLLATERAL"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CreditController_getCreditLine",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ERR_CREATE_CREDIT_MINIMUM_COLLATERAL"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/internal/credit/{userId}": {
      "post": {
        "operationId": "InternalCreditController_createCreditLine",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ERR_CREATE_CREDIT_MINIMUM_COLLATERAL"
          }
        }
      },
      "get": {
        "operationId": "InternalCreditController_getCreditLine",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ERR_CREATE_CREDIT_MINIMUM_COLLATERAL"
          },
          "404": {
            "description": "ERR_CREDIT_NOT_FOUND"
          }
        }
      }
    },
    "/v1/apto/verification/start": {
      "post": {
        "operationId": "AptoController_startPhoneVerification",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPhoneVerificationResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/apto/verification/finish": {
      "post": {
        "operationId": "AptoController_finishPhoneVerification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishPhoneVerificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePhoneVerificationResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/apto/verification/restart": {
      "post": {
        "operationId": "AptoController_restartPhoneVerification",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPhoneVerificationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/apto/user": {
      "post": {
        "operationId": "AptoController_createUser",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/apto/user/card": {
      "post": {
        "operationId": "AptoController_applyForCard",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueCardResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/internal/margins/check": {
      "post": {
        "operationId": "MarginInternalController_checkMargin",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/v1/margins/ltv": {
      "get": {
        "operationId": "MarginController_getCurrentLtv",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LtvResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/rize/users": {
      "post": {
        "operationId": "RizeController_createUser",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          },
          "409": {
            "description": "ERR_CUSTOMER_ALREADY_EXISTS"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/rize/users/cards/credit": {
      "get": {
        "operationId": "RizeController_getVirtualCard",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "ERR_ACTIVE_CUSTOMER_DOES_NOT_EXIST"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/rize/users/transactions": {
      "get": {
        "operationId": "RizeController_getTransactions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "ERR_ACTIVE_CUSTOMER_DOES_NOT_EXIST"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/plaid/link_tokens": {
      "post": {
        "operationId": "PlaidController_createLinkToken",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral": {
      "get": {
        "operationId": "CollateralController_getCollateral",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCollateralResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral/value": {
      "get": {
        "operationId": "CollateralController_getUserCollateralValue",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCollateralValueResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral/value/total": {
      "get": {
        "operationId": "CollateralController_getUserTotalCollateralValue",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalCollateralValueResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral/withdraw": {
      "post": {
        "operationId": "CollateralWithdrawalController_withdrawUserCollateral",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollateralWithdrawCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCollateralWithdrawalResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CollateralWithdrawalController_getUserWithdrawals",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCollateralWithdrawalResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral/withdraw/{asset}/max_amount": {
      "get": {
        "operationId": "CollateralWithdrawalController_getUserMaxWithdrawalAmount",
        "parameters": [
          {
            "name": "asset",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserMaxWithdrawalAmountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/onboarding": {
      "get": {
        "operationId": "OnboardingController_getOnboardingRecord",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOnboardingResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/kyc": {
      "get": {
        "operationId": "KycController_getKyc",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKycResponse"
                }
              }
            }
          },
          "404": {
            "description": "KYC_NOT_FOUND"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "KycController_createKyc",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KycDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKycResponse"
                }
              }
            }
          },
          "400": {
            "description": "KYC_ALREADY_SUBMITTED"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/email-verification": {
      "get": {
        "operationId": "UserController_checkEmailVerification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmailVerificationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/email-verification/resend": {
      "post": {
        "operationId": "UserController_resendEmailVerification",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/mfa/enroll": {
      "post": {
        "operationId": "UserController_enrollMfa",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSendEnrollmentTicketResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/mfa/enrollments": {
      "get": {
        "operationId": "UserController_getMfaEnrollments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetEnrollmentResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/mfa/enrollment": {
      "get": {
        "operationId": "UserController_isMfaEnrolled",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMfaEnrollmentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/waitlist": {
      "post": {
        "operationId": "WaitlistController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/v1/waitlist/verify/{id}": {
      "post": {
        "operationId": "WaitlistController_verify",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/waitlist/{id}": {
      "get": {
        "operationId": "WaitlistController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWaitlistRecordResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/sales_connect": {
      "post": {
        "operationId": "SalesConnectController_connect",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesConnectDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/internal/webhook/peach/confirmed_payments": {
      "post": {
        "operationId": "PeachWebhookController_paymentConfirmedHandler",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/internal/webhook/peach/test/confirmed_payments": {
      "post": {
        "operationId": "PeachWebhookController_paymentAppliedHandler",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPaymentPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/v1/payment_instruments": {
      "get": {
        "operationId": "PeachPaymentInstrumentsController_getPaymentInstruments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentInstrumentDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "BORROWER_NOT_FOUND_ERROR"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "PeachPaymentInstrumentsController_connectAccount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/payment_instruments/{id}": {
      "delete": {
        "operationId": "PeachPaymentInstrumentsController_removeAccount",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/loan_payments": {
      "get": {
        "operationId": "PaymentsController_getPayments",
        "parameters": [
          {
            "name": "startingAfter",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "endingBefore",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "fromEffectiveDate",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "toEffectiveDate",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "CREDIT_LINE_NOT_FOUND_ERROR"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "PaymentsController_scheduleTransaction",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTransactionDto"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": ""
          },
          "404": {
            "description": "AMOUNT_EXCEEDS_AVAILABLE_BALANCE"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/card_purchases": {
      "get": {
        "operationId": "PurchasesController_getPurchases",
        "parameters": [
          {
            "name": "startingAfter",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "endingBefore",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "fromEffectiveDate",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "toEffectiveDate",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchasesResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "CREDIT_LINE_DRAW_NOT_FOUND_ERROR"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/loan_obligations": {
      "get": {
        "operationId": "ObligationsController_getCreditObligations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObligationsResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "CREDIT_LINE_NOT_FOUND_ERROR"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "GetAssetPriceResponse": {
        "type": "object",
        "properties": {}
      },
      "GetDepositAddressResponseDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        },
        "required": [
          "address"
        ]
      },
      "GetCreditResponseDto": {
        "type": "object",
        "properties": {
          "totalCredit": {
            "type": "number"
          },
          "availableCredit": {
            "type": "number"
          }
        },
        "required": [
          "totalCredit",
          "availableCredit"
        ]
      },
      "StartPhoneVerificationResponseDto": {
        "type": "object",
        "properties": {
          "verificationId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "verificationId",
          "status"
        ]
      },
      "FinishPhoneVerificationDto": {
        "type": "object",
        "properties": {}
      },
      "CompletePhoneVerificationResponseDto": {
        "type": "object",
        "properties": {
          "verificationId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "verificationId",
          "status"
        ]
      },
      "CreateUserResponseDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "user_token": {
            "type": "string"
          },
          "user_data": {
            "type": "object"
          },
          "metadata": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "user_id",
          "user_token",
          "user_data",
          "metadata"
        ]
      },
      "IssueCardResponseDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "lastFour": {
            "type": "string"
          },
          "cardNetwork": {
            "type": "string"
          },
          "card_brand": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "pan": {
            "type": "string"
          },
          "ccv": {
            "type": "string"
          },
          "kyc_status": {
            "type": "string"
          },
          "kyc_reason": {
            "type": "string"
          },
          "cardholder_first_name": {
            "type": "string"
          },
          "cardholder_last_name": {
            "type": "string"
          },
          "issued_at": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "account_id",
          "lastFour",
          "cardNetwork",
          "card_brand",
          "expiration",
          "pan",
          "ccv",
          "kyc_status",
          "kyc_reason",
          "cardholder_first_name",
          "cardholder_last_name",
          "issued_at",
          "name_on_card"
        ]
      },
      "LtvResponseDto": {
        "type": "object",
        "properties": {
          "ltv": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "good",
              "ok",
              "warning",
              "margin_call"
            ]
          },
          "loanedBalance": {
            "type": "number"
          }
        },
        "required": [
          "ltv",
          "status",
          "loanedBalance"
        ]
      },
      "CardResponseDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "frozen"
            ]
          },
          "freezeReason": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "image",
          "status",
          "freezeReason"
        ]
      },
      "PaginationMetaDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "number"
          },
          "count": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          }
        },
        "required": [
          "totalCount",
          "count",
          "page",
          "limit"
        ]
      },
      "TransactionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "atm_withdrawal",
              "card_purchase",
              "card_refund",
              "dispute",
              "external_transfer",
              "fee",
              "credit",
              "internal_transfer",
              "other",
              "reversed_transfer",
              "third_party_transfer"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "pending",
              "settled",
              "failed"
            ]
          },
          "us_dollar_amount": {
            "type": "string"
          },
          "settled_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "is_adjustment": {
            "type": "boolean"
          },
          "mcc": {
            "type": "string",
            "nullable": true
          },
          "merchant_location": {
            "type": "string",
            "nullable": true
          },
          "merchant_name": {
            "type": "string",
            "nullable": true
          },
          "merchant_number": {
            "type": "string",
            "nullable": true
          },
          "denial_reason": {
            "type": "string",
            "nullable": true
          },
          "net_asset": {
            "type": "string",
            "enum": [
              "positive",
              "negative"
            ]
          }
        },
        "required": [
          "description",
          "type",
          "status",
          "us_dollar_amount",
          "settled_at",
          "created_at",
          "is_adjustment",
          "mcc",
          "merchant_location",
          "merchant_name",
          "merchant_number",
          "denial_reason",
          "net_asset"
        ]
      },
      "TransactionResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDto"
            }
          }
        },
        "required": [
          "meta",
          "data"
        ]
      },
      "GetCollateralResponse": {
        "type": "object",
        "properties": {}
      },
      "GetCollateralValueResponse": {
        "type": "object",
        "properties": {}
      },
      "GetTotalCollateralValueResponse": {
        "type": "object",
        "properties": {}
      },
      "CollateralWithdrawCreateDto": {
        "type": "object",
        "properties": {}
      },
      "GetCollateralWithdrawalResponse": {
        "type": "object",
        "properties": {}
      },
      "GetUserMaxWithdrawalAmountResponse": {
        "type": "object",
        "properties": {}
      },
      "GetOnboardingResponseDto": {
        "type": "object",
        "properties": {
          "kycStage": {
            "type": "boolean"
          },
          "emailVerificationStage": {
            "type": "boolean"
          },
          "collateralizationStage": {
            "type": "boolean"
          },
          "cardActivationStage": {
            "type": "boolean"
          },
          "mfaEnrollmentStage": {
            "type": "boolean"
          },
          "completed": {
            "type": "boolean"
          }
        },
        "required": [
          "kycStage",
          "emailVerificationStage",
          "collateralizationStage",
          "cardActivationStage",
          "mfaEnrollmentStage",
          "completed"
        ]
      },
      "GetKycResponse": {
        "type": "object",
        "properties": {}
      },
      "KycDto": {
        "type": "object",
        "properties": {}
      },
      "CreateKycResponse": {
        "type": "object",
        "properties": {}
      },
      "GetEmailVerificationResponse": {
        "type": "object",
        "properties": {}
      },
      "GetSendEnrollmentTicketResponse": {
        "type": "object",
        "properties": {}
      },
      "GetEnrollmentResponse": {
        "type": "object",
        "properties": {}
      },
      "GetMfaEnrollmentResponse": {
        "type": "object",
        "properties": {}
      },
      "CreateDto": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string"
          },
          "referrer": {
            "type": "string"
          }
        },
        "required": [
          "emailAddress"
        ]
      },
      "GetWaitlistRecordResponseDto": {
        "type": "object",
        "properties": {
          "numberOfReferrals": {
            "type": "number"
          },
          "numberOfVerifiedReferrals": {
            "type": "number"
          },
          "waitlistRank": {
            "type": "number"
          },
          "referralCode": {
            "type": "string"
          }
        },
        "required": [
          "numberOfReferrals",
          "numberOfVerifiedReferrals",
          "waitlistRank",
          "referralCode"
        ]
      },
      "SalesConnectDto": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "company": {
            "type": "string"
          }
        },
        "required": [
          "emailAddress",
          "fullName",
          "company"
        ]
      },
      "WebhookPaymentPayload": {
        "type": "object",
        "properties": {
          "accrualDate": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number"
          },
          "caseExternalId": {
            "type": "string",
            "nullable": true
          },
          "caseId": {
            "type": "string",
            "nullable": true
          },
          "caseTypeId": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "creatingMessageId": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          },
          "discriminator": {
            "type": "string"
          },
          "effectiveAt": {
            "type": "string"
          },
          "eventClass": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "interactionId": {
            "type": "string",
            "nullable": true
          },
          "isExternal": {
            "type": "boolean"
          },
          "loanExternalId": {
            "type": "string",
            "nullable": true
          },
          "loanId": {
            "type": "string"
          },
          "loanTypeId": {
            "type": "string"
          },
          "maintenanceDate": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "paymentInstrumentExternalId": {
            "type": "string",
            "nullable": true
          },
          "paymentInstrumentId": {
            "type": "string"
          },
          "paymentInstrumentType": {
            "type": "string"
          },
          "personExternalId": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "transactionExternalId": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "accrualDate",
          "amount",
          "caseExternalId",
          "caseId",
          "caseTypeId",
          "companyId",
          "createdAt",
          "creatingMessageId",
          "currency",
          "deletedAt",
          "discriminator",
          "effectiveAt",
          "eventClass",
          "eventType",
          "id",
          "interactionId",
          "isExternal",
          "loanExternalId",
          "loanId",
          "loanTypeId",
          "maintenanceDate",
          "object",
          "parentId",
          "paymentInstrumentExternalId",
          "paymentInstrumentId",
          "paymentInstrumentType",
          "personExternalId",
          "personId",
          "requestId",
          "sessionId",
          "transactionExternalId",
          "transactionId",
          "updatedAt"
        ]
      },
      "PaymentInstrumentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mask": {
            "type": "string"
          },
          "availableBalance": {
            "type": "number"
          },
          "currencyISO": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "mask",
          "availableBalance",
          "currencyISO",
          "subType"
        ]
      },
      "ConnectAccountDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "publicToken": {
            "type": "string"
          }
        },
        "required": [
          "accountId",
          "publicToken"
        ]
      },
      "PaymentResponseDataDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isExternal": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "scheduled",
              "initiated",
              "pending",
              "succeeded",
              "failed",
              "inDispute",
              "canceled",
              "chargeback"
            ]
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "payment",
              "serviceCredit"
            ]
          },
          "paymentDetails": {
            "type": "object",
            "properties": {
              "type": {
                "required": true,
                "enum": [
                  "ach",
                  "debitCard",
                  "creditCard",
                  "check",
                  "cash",
                  "payroll",
                  "paymentNetwork"
                ],
                "type": "string"
              },
              "reason": {
                "required": true,
                "enum": [
                  "autoPay",
                  "oneTimePay",
                  "settlement",
                  "reversal",
                  "reimbursement"
                ],
                "type": "string"
              },
              "fromInstrumentId": {
                "required": true,
                "type": "string"
              },
              "paymentNetworkName": {
                "required": true,
                "type": "string"
              },
              "accountNumberLastFour": {
                "required": false,
                "type": "string"
              }
            }
          },
          "actualAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "failureDescriptionShort": {
            "type": "string",
            "nullable": true
          },
          "failureDescriptionLong": {
            "type": "string",
            "nullable": true
          },
          "autopayPlanId": {
            "type": "string",
            "nullable": true
          },
          "cancelReason": {
            "type": "string",
            "nullable": true
          },
          "timestamps": {
            "type": "object",
            "properties": {
              "createdAt": {
                "required": true,
                "type": "string"
              },
              "scheduledDate": {
                "required": true,
                "type": "string",
                "nullable": true
              },
              "succeededAt": {
                "required": true,
                "type": "string",
                "nullable": true
              },
              "failedAt": {
                "required": true,
                "type": "string",
                "nullable": true
              },
              "chargebackAt": {
                "required": true,
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "id",
          "isExternal",
          "status",
          "transactionType",
          "paymentDetails",
          "actualAmount",
          "currency",
          "failureDescriptionShort",
          "failureDescriptionLong",
          "autopayPlanId",
          "cancelReason",
          "timestamps"
        ]
      },
      "PaymentsResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "total": {
                "required": true,
                "type": "number"
              },
              "count": {
                "required": true,
                "type": "number"
              },
              "nextUrl": {
                "required": true,
                "type": "string",
                "nullable": true
              },
              "previousUrl": {
                "required": true,
                "type": "string",
                "nullable": true
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentResponseDataDto"
            }
          }
        },
        "required": [
          "meta",
          "data"
        ]
      },
      "ScheduleTransactionDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 1
          },
          "scheduledDate": {
            "type": "string",
            "nullable": true
          },
          "paymentInstrumentId": {
            "type": "string",
            "pattern": {}
          }
        },
        "required": [
          "amount",
          "paymentInstrumentId"
        ]
      },
      "PurchasesResponseDataDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "regular",
              "refund",
              "cashBack"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "settled",
              "pending",
              "canceled",
              "declined",
              "disputed"
            ]
          },
          "amount": {
            "type": "number"
          },
          "denialReason": {
            "type": "string"
          },
          "timestamps": {
            "type": "object",
            "properties": {
              "createdAt": {
                "required": true,
                "type": "string"
              },
              "settledAt": {
                "required": true,
                "type": "string",
                "nullable": true
              }
            }
          },
          "purchaseDetails": {
            "type": "object",
            "properties": {
              "mcc": {
                "required": true,
                "type": "string"
              },
              "merchantLocation": {
                "required": true,
                "type": "string"
              },
              "merchantName": {
                "required": true,
                "type": "string"
              },
              "merchantNumber": {
                "required": true,
                "type": "string"
              },
              "transactionType": {
                "required": true,
                "nullable": true,
                "enum": [
                  "atm_withdrawal",
                  "card_purchase",
                  "card_refund",
                  "dispute",
                  "external_transfer",
                  "fee",
                  "credit",
                  "internal_transfer",
                  "other",
                  "reversed_transfer",
                  "third_party_transfer"
                ],
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "description",
          "type",
          "status",
          "amount",
          "denialReason",
          "timestamps",
          "purchaseDetails"
        ]
      },
      "PurchasesResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "total": {
                "required": true,
                "type": "number"
              },
              "count": {
                "required": true,
                "type": "number"
              },
              "nextUrl": {
                "required": true,
                "type": "string",
                "nullable": true
              },
              "previousUrl": {
                "required": true,
                "type": "string",
                "nullable": true
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchasesResponseDataDto"
            }
          }
        },
        "required": [
          "meta",
          "data"
        ]
      },
      "Obligation": {
        "type": "object",
        "properties": {
          "capitalizedAmount": {
            "type": "number"
          },
          "dueDate": {
            "type": "string"
          },
          "fulfilledAmount": {
            "type": "number"
          },
          "gracePeriod": {
            "type": "string",
            "nullable": true
          },
          "isOverdue": {
            "type": "boolean"
          },
          "obligationAmount": {
            "type": "number"
          },
          "overpaymentsAmount": {
            "type": "number"
          },
          "remainingAmount": {
            "type": "number"
          }
        },
        "required": [
          "capitalizedAmount",
          "dueDate",
          "fulfilledAmount",
          "gracePeriod",
          "isOverdue",
          "obligationAmount",
          "overpaymentsAmount",
          "remainingAmount"
        ]
      },
      "ObligationsResponseDto": {
        "type": "object",
        "properties": {
          "outstandingBalances": {
            "type": "object",
            "properties": {
              "outstandingFeesAmount": {
                "required": true,
                "type": "number"
              },
              "outstandingInterestAmount": {
                "required": true,
                "type": "number"
              },
              "outstandingPrincipalAmount": {
                "required": true,
                "type": "number"
              },
              "outstandingTotalAmount": {
                "required": true,
                "type": "number"
              }
            }
          },
          "overdueBalances": {
            "type": "object",
            "properties": {
              "overdueFeesAmount": {
                "required": true,
                "type": "number"
              },
              "overdueInterestAmount": {
                "required": true,
                "type": "number"
              },
              "overduePrincipalAmount": {
                "required": true,
                "type": "number"
              },
              "overdueTotalAmount": {
                "required": true,
                "type": "number"
              }
            }
          },
          "dueBalances": {
            "type": "object",
            "properties": {
              "dueFeesAmount": {
                "required": true,
                "type": "number"
              },
              "dueInterestAmount": {
                "required": true,
                "type": "number"
              },
              "duePrincipalAmount": {
                "required": true,
                "type": "number"
              },
              "dueTotalAmount": {
                "required": true,
                "type": "number"
              }
            }
          },
          "statementObligations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Obligation"
            }
          },
          "futureObligations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Obligation"
            }
          }
        },
        "required": [
          "outstandingBalances",
          "overdueBalances",
          "dueBalances",
          "statementObligations",
          "futureObligations"
        ]
      }
    },
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    }
  }
}