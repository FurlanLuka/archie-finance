{
  "openapi": "3.0.3",
  "info": {
    "title": "Archie finance API",
    "description": "",
    "version": "1.0.0",
    "contact": {}
  },
  "servers": [],
  "paths": {
    "/v1/asset_price": {
      "get": {
        "operationId": "AssetPriceController_getAssetPrices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAssetPriceResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/asset_price/{asset}": {
      "get": {
        "operationId": "AssetPriceController_getAssetPrice",
        "parameters": [
          {
            "name": "asset",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetPriceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/internal/asset_price/fetch": {
      "get": {
        "operationId": "InternalAssetPriceController_fetchAssetPrices",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v1/deposit_address/{asset}": {
      "get": {
        "operationId": "DepositAddressController_getDepositAddress",
        "parameters": [
          {
            "name": "asset",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDepositAddressResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "DEPOSIT_ADDRESS_UNKNOWN_ASSET"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/fireblocks/webhook": {
      "post": {
        "operationId": "FireblocksWebhookController_webhook",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          },
          "500": {
            "description": "FIREBLOCKS_WEBHOOK_ERROR"
          }
        }
      }
    },
    "/v1/credit": {
      "post": {
        "operationId": "CreditController_createCreditLine",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ERR_CREATE_CREDIT_MINIMUM_COLLATERAL"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CreditController_getCreditLine",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ERR_CREATE_CREDIT_MINIMUM_COLLATERAL"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/internal/credit/{userId}": {
      "post": {
        "operationId": "InternalCreditController_createCreditLine",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ERR_CREATE_CREDIT_MINIMUM_COLLATERAL"
          }
        }
      },
      "get": {
        "operationId": "InternalCreditController_getCreditLine",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "ERR_CREATE_CREDIT_MINIMUM_COLLATERAL"
          },
          "404": {
            "description": "ERR_CREDIT_NOT_FOUND"
          }
        }
      }
    },
    "/v1/apto/verification/start": {
      "post": {
        "operationId": "AptoController_startPhoneVerification",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPhoneVerificationResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/apto/verification/finish": {
      "post": {
        "operationId": "AptoController_finishPhoneVerification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishPhoneVerificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePhoneVerificationResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/apto/verification/restart": {
      "post": {
        "operationId": "AptoController_restartPhoneVerification",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPhoneVerificationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/apto/user": {
      "post": {
        "operationId": "AptoController_createUser",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/apto/user/card": {
      "post": {
        "operationId": "AptoController_applyForCard",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueCardResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/internal/margins/check": {
      "post": {
        "operationId": "MarginInternalController_checkMargin",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/v1/margins/ltv": {
      "get": {
        "operationId": "MarginController_checkMarginHandler",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LtvResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/rize/users": {
      "post": {
        "operationId": "RizeController_createUser",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          },
          "409": {
            "description": "ERR_CUSTOMER_ALREADY_EXISTS"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/rize/users/cards/image": {
      "get": {
        "operationId": "RizeController_getVirtualCard",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Debit card image"
          },
          "404": {
            "description": "ERR_ACTIVE_CUSTOMER_DOES_NOT_EXIST"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/rize/users/transactions": {
      "get": {
        "operationId": "RizeController_getTransactions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "ERR_ACTIVE_CUSTOMER_DOES_NOT_EXIST"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral": {
      "get": {
        "operationId": "CollateralController_getCollateral",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCollateralResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral/value": {
      "get": {
        "operationId": "CollateralController_getUserCollateralValue",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCollateralValueResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral/value/total": {
      "get": {
        "operationId": "CollateralController_getUserTotalCollateralValue",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalCollateralValueResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral/withdraw": {
      "post": {
        "operationId": "CollateralWithdrawalController_withdrawUserCollateral",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollateralWithdrawCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCollateralWithdrawalResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CollateralWithdrawalController_getUserWithdrawals",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCollateralWithdrawalResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/collateral/withdraw/{asset}/max_amount": {
      "get": {
        "operationId": "CollateralWithdrawalController_getUserMaxWithdrawalAmount",
        "parameters": [
          {
            "name": "asset",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserMaxWithdrawalAmountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/onboarding": {
      "get": {
        "operationId": "OnboardingController_getOnboardingRecord",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOnboardingResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/kyc": {
      "get": {
        "operationId": "KycController_getKyc",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKycResponse"
                }
              }
            }
          },
          "404": {
            "description": "KYC_NOT_FOUND"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "KycController_createKyc",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KycDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKycResponse"
                }
              }
            }
          },
          "400": {
            "description": "KYC_ALREADY_SUBMITTED"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/email-verification": {
      "get": {
        "operationId": "UserController_checkEmailVerification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmailVerificationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/email-verification/resend": {
      "post": {
        "operationId": "UserController_resendEmailVerification",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/mfa/enroll": {
      "post": {
        "operationId": "UserController_enrollMfa",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSendEnrollmentTicketResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/mfa/enrollments": {
      "get": {
        "operationId": "UserController_getMfaEnrollments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetEnrollmentResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/user/mfa/enrollment": {
      "get": {
        "operationId": "UserController_isMfaEnrolled",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMfaEnrollmentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/waitlist": {
      "post": {
        "operationId": "WaitlistController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/v1/waitlist/verify/{id}": {
      "post": {
        "operationId": "WaitlistController_verify",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/waitlist/{id}": {
      "get": {
        "operationId": "WaitlistController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWaitlistRecordResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetAssetPriceResponse": {
        "type": "object",
        "properties": {}
      },
      "GetDepositAddressResponseDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        },
        "required": [
          "address"
        ]
      },
      "GetCreditResponseDto": {
        "type": "object",
        "properties": {
          "totalCredit": {
            "type": "number"
          },
          "availableCredit": {
            "type": "number"
          }
        },
        "required": [
          "totalCredit",
          "availableCredit"
        ]
      },
      "StartPhoneVerificationResponseDto": {
        "type": "object",
        "properties": {
          "verificationId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "verificationId",
          "status"
        ]
      },
      "FinishPhoneVerificationDto": {
        "type": "object",
        "properties": {}
      },
      "CompletePhoneVerificationResponseDto": {
        "type": "object",
        "properties": {
          "verificationId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "verificationId",
          "status"
        ]
      },
      "CreateUserResponseDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "user_token": {
            "type": "string"
          },
          "user_data": {
            "type": "object"
          },
          "metadata": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "user_id",
          "user_token",
          "user_data",
          "metadata"
        ]
      },
      "IssueCardResponseDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "lastFour": {
            "type": "string"
          },
          "cardNetwork": {
            "type": "string"
          },
          "card_brand": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "pan": {
            "type": "string"
          },
          "ccv": {
            "type": "string"
          },
          "kyc_status": {
            "type": "string"
          },
          "kyc_reason": {
            "type": "string"
          },
          "cardholder_first_name": {
            "type": "string"
          },
          "cardholder_last_name": {
            "type": "string"
          },
          "issued_at": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "account_id",
          "lastFour",
          "cardNetwork",
          "card_brand",
          "expiration",
          "pan",
          "ccv",
          "kyc_status",
          "kyc_reason",
          "cardholder_first_name",
          "cardholder_last_name",
          "issued_at",
          "name_on_card"
        ]
      },
      "LtvResponseDto": {
        "type": "object",
        "properties": {
          "ltv": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "good",
              "ok",
              "warning",
              "margin_call"
            ]
          }
        },
        "required": [
          "ltv",
          "status"
        ]
      },
      "PaginationMetaDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "number"
          },
          "count": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          }
        },
        "required": [
          "totalCount",
          "count",
          "page",
          "limit"
        ]
      },
      "TransactionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "atm_withdrawal",
              "card_purchase",
              "card_refund",
              "dispute",
              "external_transfer",
              "fee",
              "credit",
              "internal_transfer",
              "other",
              "reversed_transfer",
              "third_party_transfer"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "pending",
              "settled",
              "failed"
            ]
          },
          "us_dollar_amount": {
            "type": "string"
          },
          "settled_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "is_adjustment": {
            "type": "boolean"
          },
          "mcc": {
            "type": "string",
            "nullable": true
          },
          "merchant_location": {
            "type": "string",
            "nullable": true
          },
          "merchant_name": {
            "type": "string",
            "nullable": true
          },
          "merchant_number": {
            "type": "string",
            "nullable": true
          },
          "denial_reason": {
            "type": "string",
            "nullable": true
          },
          "net_asset": {
            "type": "string",
            "enum": [
              "positive",
              "negative"
            ]
          }
        },
        "required": [
          "description",
          "type",
          "status",
          "us_dollar_amount",
          "settled_at",
          "created_at",
          "is_adjustment",
          "mcc",
          "merchant_location",
          "merchant_name",
          "merchant_number",
          "denial_reason",
          "net_asset"
        ]
      },
      "TransactionResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDto"
            }
          }
        },
        "required": [
          "meta",
          "data"
        ]
      },
      "GetCollateralResponse": {
        "type": "object",
        "properties": {}
      },
      "GetCollateralValueResponse": {
        "type": "object",
        "properties": {}
      },
      "GetTotalCollateralValueResponse": {
        "type": "object",
        "properties": {}
      },
      "CollateralWithdrawCreateDto": {
        "type": "object",
        "properties": {}
      },
      "GetCollateralWithdrawalResponse": {
        "type": "object",
        "properties": {}
      },
      "GetUserMaxWithdrawalAmountResponse": {
        "type": "object",
        "properties": {}
      },
      "GetOnboardingResponseDto": {
        "type": "object",
        "properties": {
          "kycStage": {
            "type": "boolean"
          },
          "emailVerificationStage": {
            "type": "boolean"
          },
          "collateralizationStage": {
            "type": "boolean"
          },
          "cardActivationStage": {
            "type": "boolean"
          },
          "mfaEnrollmentStage": {
            "type": "boolean"
          },
          "completed": {
            "type": "boolean"
          }
        },
        "required": [
          "kycStage",
          "emailVerificationStage",
          "collateralizationStage",
          "cardActivationStage",
          "mfaEnrollmentStage",
          "completed"
        ]
      },
      "GetKycResponse": {
        "type": "object",
        "properties": {}
      },
      "KycDto": {
        "type": "object",
        "properties": {}
      },
      "CreateKycResponse": {
        "type": "object",
        "properties": {}
      },
      "GetEmailVerificationResponse": {
        "type": "object",
        "properties": {}
      },
      "GetSendEnrollmentTicketResponse": {
        "type": "object",
        "properties": {}
      },
      "GetEnrollmentResponse": {
        "type": "object",
        "properties": {}
      },
      "GetMfaEnrollmentResponse": {
        "type": "object",
        "properties": {}
      },
      "CreateDto": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string"
          },
          "referrer": {
            "type": "string"
          }
        },
        "required": [
          "emailAddress"
        ]
      },
      "GetWaitlistRecordResponseDto": {
        "type": "object",
        "properties": {
          "numberOfReferrals": {
            "type": "number"
          },
          "numberOfVerifiedReferrals": {
            "type": "number"
          },
          "waitlistRank": {
            "type": "number"
          },
          "referralCode": {
            "type": "string"
          }
        },
        "required": [
          "numberOfReferrals",
          "numberOfVerifiedReferrals",
          "waitlistRank",
          "referralCode"
        ]
      }
    },
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    }
  }
}