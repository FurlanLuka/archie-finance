name: Production

on:
  push:
    tags:
      - app-*-v*-production

env:
  ARCHIE_AUTH_DEV_BUCKET: mfa.archie.finance
  ARCHIE_DASHBOARD_DEV_BUCKET: dashboard.archie.finance
  ARCHIE_AUTH_DEV_CLOUDFRONT_ID: EZRI5UXHGJOUM
  ARCHIE_DASHBOARD_DEV_CLOUDFRONT_ID: E228CLDFAX793S
  AWS_REGION: us-east-1
  NODE_ENV: production
  NX_API_URL: https://api.archie.finance
  NX_AUTH0_DOMAIN: auth.archie.finance
  NX_AUTH0_CLIENT_ID: 3zquGmbgOi6zVCudVB6JjfB2xOOL2xr8
  NX_AUTH0_AUDIENCE: https://api.archie.finance

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Extract details from Git
        id: git_details
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          export TAG=${GITHUB_REF#refs/tags/}
          export TAG_WITHOUT_TYPE=${TAG#app-}
          echo ::set-output name=APP_NAME::${TAG_WITHOUT_TYPE%-v*}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-dependencies-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm install --dev
      - name: Build application
        run: npm run execute ${{ steps.git_details.outputs.APP_NAME }}:build
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: static-build
          path: dist/apps/${{ steps.git_details.outputs.APP_NAME }}
    outputs:
      app_name: ${{ steps.git_details.outputs.APP_NAME }}
  deploy:
    name: Deploy application
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: static-build
          path: build
      - name: Deploy
        env:
          APP_NAME: ${{ needs.build.outputs.app_name }}
        run: |
          if [ ${{ env.APP_NAME }} = "archie-dashboard" ]; then export BUCKET=${{env.ARCHIE_DASHBOARD_DEV_BUCKET}}; 
          else exit 1; fi
          aws s3 sync build s3://${BUCKET}/
      - name: Invalidate Cloudfront Cache
        env:
          APP_NAME: ${{ needs.build.outputs.app_name }}
        run: |
          if [ ${{ env.APP_NAME }} = "archie-dashboard" ]; then export CLOUDFRONT_ID=${{env.ARCHIE_DASHBOARD_DEV_CLOUDFRONT_ID}}; 
          else exit 1; fi
          aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths "/*"
